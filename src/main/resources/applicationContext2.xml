<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans.xsd
               http://www.springframework.org/schema/aop
               http://www.springframework.org/schema/aop/spring-aop.xsd"> <!-- bean definitions here -->

    <!-- XML 的配置方式完成 AOP 的开发 -->
    <!-- 目标类 -->
    <bean id="customerDao" class="com.xavier.demo2.CustomerDaoImpl"/>

    <!-- 切面类 -->
    <bean id="myAspectXML" class="com.xavier.demo2.MyAspectXML"/>

    <!-- AOP 配置 -->
    <aop:config>
        <!-- 配置切入点 -->
        <aop:pointcut id="pointcut1" expression="execution(* com.xavier.demo2.CustomerDao.save(..))"/>
        <aop:pointcut id="pointcut2" expression="execution(* com.xavier.demo2.CustomerDao.update(..))"/>
        <aop:pointcut id="pointcut3" expression="execution(* com.xavier.demo2.CustomerDao.delete(..))"/>
        <aop:pointcut id="pointcut4" expression="execution(* com.xavier.demo2.CustomerDao.findOne(..))"/>
        <aop:pointcut id="pointcut5" expression="execution(* com.xavier.demo2.CustomerDao.findAll(..))"/>

        <!-- 配置 AOP 切面 -->
        <aop:aspect ref="myAspectXML">
            <!-- 配置前置通知 -->
            <aop:before method="before" pointcut-ref="pointcut1"/>

            <!-- 配置后置通知 -->
            <aop:after-returning method="afterReturning" pointcut-ref="pointcut2" returning="result"/>
            
            <!-- 配置环绕通知 -->
            <aop:around method="around" pointcut-ref="pointcut3"/>

            <!-- 配置异常抛出通知 -->
            <aop:after-throwing method="afterThrowing" pointcut-ref="pointcut4" throwing="e"/>

            <!-- 配置最终通知 -->
            <aop:after method="after" pointcut-ref="pointcut5"/>
        </aop:aspect>
    </aop:config>
</beans>